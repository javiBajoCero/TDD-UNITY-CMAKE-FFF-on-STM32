name: CI (CMake + Unity + FFF + STM32)

on:
  push:
  pull_request:

defaults:
  run:
    shell: bash

permissions:
    checks: write
    contents: read
    
jobs:
  unit-tests:
    name: Unit tests (Unity + FFF run on linux C)
    runs-on: ubuntu-latest

    container:
      image: javibajocero/stm32cubeclt-builder:1.19.0 # has arm tools

    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Configure unit tests (ARM)
        run: |
          cmake -S tests -B build-tests -G "Unix Makefiles"\
            -G "Unix Makefiles" \
            -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_TOOLCHAIN_FILE="$GITHUB_WORKSPACE/cmake/gcc-arm-none-eabi.cmake"

      - name: Build unit tests
        run: cmake --build build-tests --target UnitTests --config Debug -j


  firmware-build:
    name: STM32 Cross compiling (arm-none-eabi)
    runs-on: ubuntu-latest

    container:
      image: javibajocero/stm32cubeclt-builder:1.19.0 # has arm tools
    
    needs: unit-tests   # <-- depends on unit_tests job

    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build firmware
        run: |
          echo "ðŸ”§ Building firmware..."
          # Remove existing build directory (clean start)
          rm -rf build

          # Generate Makefiles
          cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Debug -B build 

          # Clean and build
          cd build
          make clean
          make -j$(nproc)  # builds with all CPU cores
          ls
          cd ..

      - name: Upload firmware artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-${{ github.run_number }}
          path: |
            build/*.elf
          if-no-files-found: error
