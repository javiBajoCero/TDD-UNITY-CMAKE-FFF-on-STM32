name: CI (CMake + Unity + FFF + STM32)

on:
  push:
  pull_request:

defaults:
  run:
    shell: bash

jobs:
  unit-tests:
    name: Host Unit Tests (Unity + FFF)
    runs-on: ubuntu-latest

    container:
      image: javibajocero/stm32cubeclt-builder:1.19.0 # has arm tools

    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Configure unit tests (host)
        run: cmake -S tests -B build-host -DCMAKE_BUILD_TYPE=Debug

      - name: Build unit tests
        run: cmake --build build-host --target unit_tests --parallel

      - name: Run unit tests
        run: ctest --test-dir build-host --output-on-failure

      - name: Coverage (gcovr)
        if: always()
        run: |
          gcovr -r . build-host \
            --xml-pretty --xml coverage.xml \
            --html-details coverage.html \
            --exclude '.*third_party/.*' \
            --exclude '.*tests/.*'
          echo "Coverage report generated."

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-host
          path: |
            coverage.html
            coverage.xml

  firmware-build:
    name: STM32 Cross Build (arm-none-eabi)
    runs-on: ubuntu-latest

    container:
      image: javibajocero/stm32cubeclt-builder:1.19.0 # has arm tools
      
    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build firmware
        run: |
          echo "ðŸ”§ Building firmware..."
          # Remove existing build directory (clean start)
          rm -rf build

          # Generate Makefiles
          cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Debug -B build 

          # Clean and build
          cd build
          make clean
          make -j$(nproc)  # builds with all CPU cores
          ls
          cd ..

      - name: Upload firmware artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${CMAKE_PROJECT_NAME}-${{ github.run_number }}
          path: |
            build/*.elf
          if-no-files-found: error
